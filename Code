import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

# Load dataset (replace 'heart_data.csv' with your actual dataset path)
dataset = pd.read_csv('heart_data.csv')

# Separate features and target
X = dataset.drop(columns=['target'])  # Replace 'target' with the actual target column name
y = dataset['target']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Naive Bayes model
model = GaussianNB()

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy * 100:.2f}%")

# Example prediction
example_data = [[57, 1, 2, 140, 241, 0, 1, 123, 1, 0.2, 2, 0, 3]]  # Replace with feature values
prediction = model.predict(example_data)
print("Heart Attack Risk Prediction:", "High" if prediction[0] == 1 else "Low")
